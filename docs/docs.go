// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/aggregates": {
            "get": {
                "description": "Returns current aggregation grouped by tenant, SKU and unit",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pulses"
                ],
                "summary": "Get aggregated usage data",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.AggregatedPulseDTO"
                            }
                        }
                    }
                }
            }
        },
        "/flush": {
            "post": {
                "description": "Simulates sending the aggregated data and clears current state",
                "tags": [
                    "pulses"
                ],
                "summary": "Flush current aggregated data",
                "responses": {
                    "200": {
                        "description": "Flushed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pulses": {
            "post": {
                "description": "Accepts a usage pulse and adds it to the aggregation service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pulses"
                ],
                "summary": "Receive a new usage pulse",
                "parameters": [
                    {
                        "description": "Usage Pulse Data",
                        "name": "pulse",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Pulse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Pulse": {
            "type": "object",
            "required": [
                "product_sku",
                "tenant",
                "use_unit",
                "used_amount"
            ],
            "properties": {
                "product_sku": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "use_unit": {
                    "type": "string"
                },
                "used_amount": {
                    "type": "number"
                }
            }
        },
        "service.AggregatedPulseDTO": {
            "type": "object",
            "properties": {
                "product_sku": {
                    "type": "string"
                },
                "tenant": {
                    "type": "string"
                },
                "total_used": {
                    "type": "number"
                },
                "use_unit": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Cloud Metering Ingestor API",
	Description:      "API for usage pulse ingestion and aggregation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
